// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"webook/reward/grpc"
	"webook/reward/ioc"
	"webook/reward/repository"
	"webook/reward/repository/cache"
	"webook/reward/repository/dao"
	"webook/reward/service"
)

// Injectors from wire.go:

func InitApp() *App {
	client := ioc.NewEtcdClient()
	wechatPaymentServiceClient := ioc.InitPaymentGrpcClient(client)
	accountServiceClient := ioc.InitAccountGrpcClient(client)
	loggerV1 := ioc.InitLogger()
	db := ioc.InitDB(loggerV1)
	rewardDAO := dao.NewRewardGORMDAO(db)
	cmdable := ioc.InitRedis()
	rewardCache := cache.NewRewardRedisCache(cmdable)
	rewardRepository := repository.NewRewardRepository(rewardDAO, rewardCache)
	rewardService := service.NewWechatNativeRewardService(wechatPaymentServiceClient, accountServiceClient, rewardRepository, loggerV1)
	rewardServiceServer := grpc.NewRewardServiceServer(rewardService)
	server := ioc.NewGrpcServer(rewardServiceServer, client, loggerV1)
	app := &App{
		server: server,
	}
	return app
}

// wire.go:

var serverSet = wire.NewSet(dao.NewRewardGORMDAO, cache.NewRewardRedisCache, repository.NewRewardRepository, service.NewWechatNativeRewardService, grpc.NewRewardServiceServer)

var thirdSet = wire.NewSet(ioc.InitDB, ioc.InitRedis, ioc.InitLogger, ioc.NewEtcdClient, ioc.NewGrpcServer, ioc.InitPaymentGrpcClient, ioc.InitAccountGrpcClient)
